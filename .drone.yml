kind: pipeline
type: docker
name: build
steps:
- name: build&publish  
  image: plugins/docker
  pull: if-not-exists
  settings:
    username: 
      from_secret: dockerhub-user
    password: 
      from_secret: dockerhub-pwd
    repo: 
      from_secret: docker-repo
    tags: 
      - latest
      - v${DRONE_BUILD_NUMBER}
    dockerfile: build/Dockerfile
    context: build/
    pull_image: true
    # auto_tag: true


---
kind: pipeline
type: ssh
name: deploy

depends_on:
- build

server:
  host: 
    from_secret: ubuntuk-ssh-host
  user: 
    from_secret: ubuntuk-ssh-user
  password: 
    from_secret: ubuntuk-ssh-pwd

steps:
- name: pull&deploy
  environment:
    DPLOY_PATH:
      from_secret: dploy-path
  commands:
  - echo '*****部署docker-compose文件*****'
  - mkdir -p $${DPLOY_PATH}
  - cp docker-compose.yml $${DPLOY_PATH}
  - cd $${DPLOY_PATH}
  - pwd
  - echo '*****拉取最新镜像*****'
  - docker-compose pull
  - echo '*****启动中*****'
  - docker-compose up -d
  - docker-compose ps
  - echo 'BUILD SUCCESS!!!'


---
kind: pipeline
type: docker
name: notice

depends_on:
- deploy

trigger:
  status:
  - failure

steps:
- name: serverchan-notice
  image: yakumioto/drone-serverchan
  pull: if-not-exists
  settings:
    key: 
      from_secret: serverchan-key
    text: "🔨${DRONE_REPO_NAME} ${DRONE_BUILD_STATUS}"
    desp: |
      | 项目名称     | **${DRONE_REPO_NAME}**|
      |--------------|--------------------------------------|
      | 实时状态     | ![Build Status](https://drone.kamipon.com:442/api/badges/zuozhi/${DRONE_REPO_NAME}/status.svg)|
      | 当前状态     | **${DRONE_BUILD_STATUS}**  |
      | 项目地址     | [跳转到GIT仓库](${DRONE_REPO_LINK})  |
      | 构建日志     | [跳转到DroneCI](${DRONE_BUILD_LINK}) |
      | 构建ID       | ${DRONE_BUILD_NUMBER}            |
      | 当前分支     | ${DRONE_COMMIT_BRANCH}           |
      | 当前提交信息 | ${DRONE_COMMIT_MESSAGE}           |

...